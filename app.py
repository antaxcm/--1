import streamlit as st
import pandas as pd
import random
import json
import os
from character import Character
from data_manager import DataManager
from dnd_data import races, classes, backgrounds, ability_descriptions

# Set page configuration
st.set_page_config(
    page_title="–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π D&D",
    page_icon="üé≤",
    layout="wide"
)

# Initialize session state for storing character data
if 'character' not in st.session_state:
    st.session_state.character = Character()

if 'saved_message' not in st.session_state:
    st.session_state.saved_message = ""

if 'loaded_message' not in st.session_state:
    st.session_state.loaded_message = ""

# Create data manager instance
data_manager = DataManager()

# Main title
st.title("üé≤ –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π D&D")

# Sidebar for navigation
with st.sidebar:
    st.header("–ù–∞–≤–∏–≥–∞—Ü–∏—è")
    page = st.radio("", ["–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"])
    
    st.header("–û –ø—Ä–æ–≥—Ä–∞–º–º–µ")
    st.write("–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–º–æ–≥–∞–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞–º–∏ –¥–ª—è Dungeons & Dragons 5-–π —Ä–µ–¥–∞–∫—Ü–∏–∏.")

# Create Character Page
if page == "–°–æ–∑–¥–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
    # Two-column layout for character creation
    col1, col2 = st.columns([3, 2])
    
    with col1:
        st.header("–î–µ—Ç–∞–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
        
        # Basic Information
        name = st.text_input("–ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞", value=st.session_state.character.name, max_chars=50, 
                            help="–ú–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ - _")
        
        # Race Selection
        race_options = list(races.keys())
        selected_race = st.selectbox("–†–∞—Å–∞", race_options, index=race_options.index(st.session_state.character.race) if st.session_state.character.race in race_options else 0)
        
        if selected_race:
            st.write(f"**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞—Å—ã:** {races[selected_race]['description']}")
            
            # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
            ability_names_ru = {
                "Strength": "–°–∏–ª–∞",
                "Dexterity": "–õ–æ–≤–∫–æ—Å—Ç—å",
                "Constitution": "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ",
                "Intelligence": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                "Wisdom": "–ú—É–¥—Ä–æ—Å—Ç—å",
                "Charisma": "–•–∞—Ä–∏–∑–º–∞"
            }
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º —Å—Ç—Ä–æ–∫–∏ —Å –±–æ–Ω—É—Å–∞–º–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ –≤ —Ä—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è
            bonuses_ru = [f'+{v} {ability_names_ru[k]}' for k, v in races[selected_race]['ability_bonuses'].items()]
            st.write(f"**–£–≤–µ–ª–∏—á–µ–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫:** {', '.join(bonuses_ru)}")
        
        # Class Selection
        class_options = list(classes.keys())
        selected_class = st.selectbox("–ö–ª–∞—Å—Å", class_options, index=class_options.index(st.session_state.character.character_class) if st.session_state.character.character_class in class_options else 0)
        
        if selected_class:
            st.write(f"**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Å–∞:** {classes[selected_class]['description']}")
            st.write(f"**–ö–æ—Å—Ç—å —Ö–∏—Ç–æ–≤:** d{classes[selected_class]['hit_die']}")
            
            # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
            ability_names_ru = {
                "Strength": "–°–∏–ª–∞",
                "Dexterity": "–õ–æ–≤–∫–æ—Å—Ç—å",
                "Constitution": "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ",
                "Intelligence": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                "Wisdom": "–ú—É–¥—Ä–æ—Å—Ç—å",
                "Charisma": "–•–∞—Ä–∏–∑–º–∞"
            }
            
            # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–µ—Ä–≤–∏—á–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–ª–∞—Å—Å–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
            primary_abilities_ru = [ability_names_ru[ability] for ability in classes[selected_class]['primary_abilities']]
            st.write(f"**–û—Å–Ω–æ–≤–Ω—ã–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:** {', '.join(primary_abilities_ru)}")
        
        # Background Selection
        background_options = list(backgrounds.keys())
        selected_background = st.selectbox("–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è", background_options, index=background_options.index(st.session_state.character.background) if st.session_state.character.background in background_options else 0)
        
        if selected_background:
            st.write(f"**–û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –ø—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏–∏:** {backgrounds[selected_background]['description']}")
        
        # Generate ability scores button
        if st.button("–ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫"):
            ability_scores = {}
            for ability in ["Strength", "Dexterity", "Constitution", "Intelligence", "Wisdom", "Charisma"]:
                # Roll 4d6, remove lowest die
                rolls = [random.randint(1, 6) for _ in range(4)]
                rolls.sort(reverse=True)
                ability_scores[ability] = sum(rolls[:3])
            
            # Update character with new rolls
            st.session_state.character.ability_scores = ability_scores
            st.rerun()
    
    with col2:
        st.header("–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏")
        
        # Display current ability scores and modifiers
        ability_scores = st.session_state.character.ability_scores
        
        if not ability_scores:
            st.info("–ù–∞–∂–º–∏—Ç–µ '–ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫' –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π –ø–æ –ø—Ä–∞–≤–∏–ª–∞–º D&D (4d6, —É–±—Ä–∞—Ç—å –Ω–∞–∏–º–µ–Ω—å—à–µ–µ).")
        else:
            # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
            ability_names_ru = {
                "Strength": "–°–∏–ª–∞",
                "Dexterity": "–õ–æ–≤–∫–æ—Å—Ç—å",
                "Constitution": "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ",
                "Intelligence": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                "Wisdom": "–ú—É–¥—Ä–æ—Å—Ç—å",
                "Charisma": "–•–∞—Ä–∏–∑–º–∞"
            }
            
            for ability, score in ability_scores.items():
                # Calculate racial bonus if any
                racial_bonus = races[selected_race]['ability_bonuses'].get(ability, 0)
                total_score = score + racial_bonus
                modifier = (total_score - 10) // 2
                
                # Display ability with modifier and explanation
                modifier_display = f"+{modifier}" if modifier >= 0 else f"{modifier}"
                
                st.markdown(f"**{ability_names_ru[ability]}: {total_score}** ({score} + {racial_bonus} —Ä–∞—Å–æ–≤—ã–π –±–æ–Ω—É—Å) [–ú–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {modifier_display}]")
                st.caption(ability_descriptions[ability])
        
        st.markdown("---")
        
        # Display inventory based on class
        st.subheader("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
        if selected_class:
            equipment = classes[selected_class]['starting_equipment']
            for item in equipment:
                st.write(f"‚Ä¢ {item}")
    
    # Save character section
    st.markdown("---")
    if st.button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"):
        # –í–∞–ª–∏–¥–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
        error_messages = []
        
        if not name or name.strip() == "":
            error_messages.append("‚Ä¢ –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
        
        if len(name) > 50:
            error_messages.append("‚Ä¢ –ò–º—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω–æ–µ (–º–∞–∫—Å–∏–º—É–º 50 —Å–∏–º–≤–æ–ª–æ–≤)")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
        import re
        if name and not re.match(r'^[a-zA-Z–∞-—è–ê-–Ø0-9\s\-_]+$', name):
            error_messages.append("‚Ä¢ –ò–º—è –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, —Ü–∏—Ñ—Ä—ã, –ø—Ä–æ–±–µ–ª—ã –∏ –∑–Ω–∞–∫–∏ - _")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã
        if not st.session_state.character.ability_scores:
            error_messages.append("‚Ä¢ –°–Ω–∞—á–∞–ª–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –∫–Ω–æ–ø–∫–æ–π '–ë—Ä–æ—Å–∏—Ç—å –∫–æ—Å—Ç–∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫'")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è –æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∏
        import os
        safe_name = "".join(x for x in name if x.isalnum() or x in " _-").replace(" ", "_")
        if safe_name and os.path.exists(f"character_data/{safe_name}.json"):
            st.warning(f"‚ö†Ô∏è –ü–µ—Ä—Å–æ–Ω–∞–∂ —Å –∏–º–µ–Ω–µ–º '{name}' —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–Ω –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω.")
        
        if error_messages:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞:\n" + "\n".join(error_messages))
        else:
            # Update character object with current form values
            st.session_state.character.name = name
            st.session_state.character.race = selected_race
            st.session_state.character.character_class = selected_class
            st.session_state.character.background = selected_background
            
            # Save to file using data manager
            success = data_manager.save_character(st.session_state.character)
            if success:
                st.session_state.saved_message = f"–ü–µ—Ä—Å–æ–Ω–∞–∂ '{name}' —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!"
                st.success(st.session_state.saved_message)
                
                # –ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É —ç–∫—Å–ø–æ—Ä—Ç–∞ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
                st.markdown("---")
                st.subheader("üì§ –≠–∫—Å–ø–æ—Ä—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
                
                if st.button("üìÑ –°–∫–∞—á–∞—Ç—å –ª–∏—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ (TXT)", key="export_new"):
                    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    txt_content = f"""‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                    –õ–ò–°–¢ –ü–ï–†–°–û–ù–ê–ñ–ê D&D 5e
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–ò–ú–Ø –ü–ï–†–°–û–ù–ê–ñ–ê: {name}
–†–ê–°–ê: {selected_race}
–ö–õ–ê–°–°: {selected_class}
–ü–†–ï–î–´–°–¢–û–†–ò–Ø: {selected_background}
–£–†–û–í–ï–ù–¨: 1

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                         –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"""
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ —Å —Ä–∞—Å–æ–≤—ã–º–∏ –±–æ–Ω—É—Å–∞–º–∏
                    ability_names_ru = {
                        "Strength": "–°–∏–ª–∞",
                        "Dexterity": "–õ–æ–≤–∫–æ—Å—Ç—å", 
                        "Constitution": "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ",
                        "Intelligence": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                        "Wisdom": "–ú—É–¥—Ä–æ—Å—Ç—å",
                        "Charisma": "–•–∞—Ä–∏–∑–º–∞"
                    }
                    
                    for ability, base_score in st.session_state.character.ability_scores.items():
                        racial_bonus = races[selected_race]['ability_bonuses'].get(ability, 0)
                        total_score = base_score + racial_bonus
                        modifier = (total_score - 10) // 2
                        modifier_display = f"+{modifier}" if modifier >= 0 else f"{modifier}"
                        txt_content += f"{ability_names_ru[ability].upper()}: {total_score} (–±–∞–∑–æ–≤–æ–µ: {base_score} + —Ä–∞—Å–æ–≤—ã–π –±–æ–Ω—É—Å: {racial_bonus}) [–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {modifier_display}]\n"
                    
                    txt_content += f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                      –°–¢–ê–†–¢–û–í–û–ï –°–ù–ê–†–Ø–ñ–ï–ù–ò–ï
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"""
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
                    equipment = classes[selected_class]['starting_equipment']
                    for item in equipment:
                        txt_content += f"‚Ä¢ {item}\n"
                    
                    txt_content += f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                        –û–ü–ò–°–ê–ù–ò–Ø –†–ê–° –ò –ö–õ–ê–°–°–û–í
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–†–ê–°–ê - {selected_race}:
{races[selected_race]['description']}

–†–∞—Å–æ–≤—ã–µ –±–æ–Ω—É—Å—ã —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫:
"""
                    for ability, bonus in races[selected_race]['ability_bonuses'].items():
                        txt_content += f"‚Ä¢ {ability_names_ru[ability]}: +{bonus}\n"
                    
                    txt_content += f"""
–ö–õ–ê–°–° - {selected_class}:
{classes[selected_class]['description']}
–ö–æ—Å—Ç—å —Ö–∏—Ç–æ–≤: d{classes[selected_class]['hit_die']}

–ü–†–ï–î–´–°–¢–û–†–ò–Ø - {selected_background}:
{backgrounds[selected_background]['description']}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π D&D 5e
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
"""
                    
                    # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    st.download_button(
                        label="üíæ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
                        data=txt_content,
                        file_name=f"{name}_dnd_character.txt",
                        mime="text/plain",
                        key="download_new"
                    )
            else:
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –ø–∞–ø–∫–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –∏–º—è.")

# Load Character Page
elif page == "–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞":
    st.header("–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
    
    # Get all saved characters
    saved_characters = data_manager.get_saved_characters()
    
    if not saved_characters:
        st.info("–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –°–Ω–∞—á–∞–ª–∞ —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞!")
    else:
        # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Å—Ç–æ–ª–±—Ü–æ–≤
        column_names = {
            'name': '–ò–º—è',
            'race': '–†–∞—Å–∞',
            'character_class': '–ö–ª–∞—Å—Å',
            'level': '–£—Ä–æ–≤–µ–Ω—å'
        }
        
        # Display characters in a table
        characters_df = pd.DataFrame(saved_characters)
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Å –ø–µ—Ä–µ–∏–º–µ–Ω–æ–≤–∞–Ω–Ω—ã–º–∏ —Å—Ç–æ–ª–±—Ü–∞–º–∏ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        display_df = characters_df[['name', 'race', 'character_class', 'level']].copy()
        display_df.columns = [column_names[col] for col in display_df.columns]
        st.dataframe(display_df, use_container_width=True)
        
        # Select character to load
        selected_character_name = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏", 
                                              [char['name'] for char in saved_characters])
        
        if st.button("–ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"):
            # Find the selected character data
            selected_char_data = next((char for char in saved_characters if char['name'] == selected_character_name), None)
            
            if selected_char_data:
                # Load character into session state
                st.session_state.character = Character(**selected_char_data)
                st.session_state.loaded_message = f"–ü–µ—Ä—Å–æ–Ω–∞–∂ '{selected_character_name}' —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!"
                st.success(st.session_state.loaded_message)
                
                # Show character details
                st.subheader("–î–µ—Ç–∞–ª–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞")
                col1, col2 = st.columns(2)
                
                # –†—É—Å—Å–∫–∏–µ –Ω–∞–∑–≤–∞–Ω–∏—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫
                ability_names_ru = {
                    "Strength": "–°–∏–ª–∞",
                    "Dexterity": "–õ–æ–≤–∫–æ—Å—Ç—å",
                    "Constitution": "–¢–µ–ª–æ—Å–ª–æ–∂–µ–Ω–∏–µ",
                    "Intelligence": "–ò–Ω—Ç–µ–ª–ª–µ–∫—Ç",
                    "Wisdom": "–ú—É–¥—Ä–æ—Å—Ç—å",
                    "Charisma": "–•–∞—Ä–∏–∑–º–∞"
                }
                
                with col1:
                    st.write(f"**–ò–º—è:** {selected_char_data['name']}")
                    st.write(f"**–†–∞—Å–∞:** {selected_char_data['race']}")
                    st.write(f"**–ö–ª–∞—Å—Å:** {selected_char_data['character_class']}")
                    st.write(f"**–ü—Ä–µ–¥—ã—Å—Ç–æ—Ä–∏—è:** {selected_char_data['background']}")
                
                with col2:
                    st.write("**–•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏:**")
                    for ability, score in selected_char_data['ability_scores'].items():
                        modifier = (score - 10) // 2
                        modifier_display = f"+{modifier}" if modifier >= 0 else f"{modifier}"
                        st.write(f"- {ability_names_ru[ability]}: {score} [{modifier_display}]")
                
                st.subheader("–°—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ")
                if selected_char_data['character_class']:
                    equipment = classes[selected_char_data['character_class']]['starting_equipment']
                    for item in equipment:
                        st.write(f"‚Ä¢ {item}")
                
                # –ö–Ω–æ–ø–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ –≤ TXT
                st.markdown("---")
                if st.button("üìÑ –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª", key="export_loaded"):
                    # –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –ø–µ—Ä—Å–æ–Ω–∞–∂–∞
                    txt_content = f"""‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                    –õ–ò–°–¢ –ü–ï–†–°–û–ù–ê–ñ–ê D&D 5e
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–ò–ú–Ø –ü–ï–†–°–û–ù–ê–ñ–ê: {selected_char_data['name']}
–†–ê–°–ê: {selected_char_data['race']}
–ö–õ–ê–°–°: {selected_char_data['character_class']}
–ü–†–ï–î–´–°–¢–û–†–ò–Ø: {selected_char_data['background']}
–£–†–û–í–ï–ù–¨: {selected_char_data['level']}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                         –•–ê–†–ê–ö–¢–ï–†–ò–°–¢–ò–ö–ò
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"""
                    # –î–æ–±–∞–≤–ª—è–µ–º —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏
                    for ability, score in selected_char_data['ability_scores'].items():
                        modifier = (score - 10) // 2
                        modifier_display = f"+{modifier}" if modifier >= 0 else f"{modifier}"
                        txt_content += f"{ability_names_ru[ability].upper()}: {score} (–º–æ–¥–∏—Ñ–∏–∫–∞—Ç–æ—Ä: {modifier_display})\n"
                    
                    txt_content += f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                      –°–¢–ê–†–¢–û–í–û–ï –°–ù–ê–†–Ø–ñ–ï–ù–ò–ï
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

"""
                    # –î–æ–±–∞–≤–ª—è–µ–º —Å–Ω–∞—Ä—è–∂–µ–Ω–∏–µ
                    if selected_char_data['character_class']:
                        equipment = classes[selected_char_data['character_class']]['starting_equipment']
                        for item in equipment:
                            txt_content += f"‚Ä¢ {item}\n"
                    
                    txt_content += f"""
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
                        –û–ü–ò–°–ê–ù–ò–Ø –†–ê–° –ò –ö–õ–ê–°–°–û–í
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

–†–ê–°–ê - {selected_char_data['race']}:
{races[selected_char_data['race']]['description']}

–ö–õ–ê–°–° - {selected_char_data['character_class']}:
{classes[selected_char_data['character_class']]['description']}

–ü–†–ï–î–´–°–¢–û–†–ò–Ø - {selected_char_data['background']}:
{backgrounds[selected_char_data['background']]['description']}

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π D&D 5e
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
"""
                    
                    # –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
                    st.download_button(
                        label="üíæ –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª –ø–µ—Ä—Å–æ–Ω–∞–∂–∞",
                        data=txt_content,
                        file_name=f"{selected_char_data['name']}_dnd_character.txt",
                        mime="text/plain"
                    )
            else:
                st.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
